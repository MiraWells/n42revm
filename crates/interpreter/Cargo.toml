[package]
authors = ["Dragan Rakita <dragan0rakita@gmail.com>"]
description = "REVM Interpreter"
edition = "2021"
keywords = ["no_std", "ethereum", "evm", "revm"]
license = "MIT"
name = "revm-interpreter"
repository = "https://github.com/bluealloy/revm"
version = "0.1.0"
readme = "../../README.md"

[dependencies]
arrayref = "0.3"
auto_impl = { version = "1.0", default-features = false }
bytes = { version = "1.1", default-features = false }
futures = { version = "0.3.24", optional = true }
hashbrown = { version = "0.13" }
hex = { version = "0.4", default-features = false }
num_enum = { version = "0.5", default-features = false } # used for SpecId from u8 cast
rlp = { version = "0.5", default-features = false } # used for create2 address calculation
ruint = { version = "1.7.0", features = ["primitive-types", "rlp"] }
serde = { version = "1.0", features = ["derive", "rc"], optional = true }
tokio = { version = "1.23", features = [
    "rt-multi-thread",
    "macros",
], optional = true }
ethers-providers = { version = "1.0.2", optional = true }
ethers-core = { version = "1.0.2", optional = true }

# bits B256 B160 crate
fixed-hash = { version = "0.8", default-features = false, features = [
    "rustc-hex",
] }
hex-literal = "0.3"
derive_more = "0.99"

# sha3 keccak hasher
sha3 = { version = "0.10", default-features = false, features = [] }

arbitrary = { version = "1.2", features = ["derive"], optional = true }

[dev-dependencies]
arbitrary = { version = "1.2", features = ["derive"]}
proptest = { version = "1.0" }
proptest-derive = "0.2.0"
ruint = { version = "1.7.0", features = ["primitive-types", "rlp", "proptest", "arbitrary"] }

[features]
default = ["std"]
dev = [
    "memory_limit",
    "optional_balance_check",
    "optional_block_gas_limit",
    "optional_eip3607",
    "optional_gas_refund",
]
memory_limit = []
no_gas_measuring = []
optional_balance_check = []
optional_block_gas_limit = []
optional_eip3607 = []
optional_gas_refund = []
std = ["bytes/std", "num_enum/std", "rlp/std", "hex/std"]
with-serde = ["serde", "hex/serde", "hashbrown/serde", "ruint/serde"]
arbitrary = ["dep:arbitrary", "ruint/arbitrary", "ruint/proptest"]