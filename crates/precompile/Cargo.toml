[package]
authors = ["Dragan Rakita <dragan0rakita@gmail.com>"]
description = "revm Precompiles - Ethereum compatible precompiled contracts"
edition = "2021"
keywords = ["no_std", "ethereum", "evm", "revm", "precompiles"]
license = "MIT"
name = "revm-precompile"
repository = "https://github.com/bluealloy/revm"
version = "6.0.0"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
revm-primitives = { path = "../primitives", version = "3.1.1", default-features = false }
bn = { package = "substrate-bn", version = "0.6", default-features = false }
once_cell = { version = "1.19", default-features = false, features = ["alloc"] }
ripemd = { version = "0.1", default-features = false }
# sha2 = { version = "0.10", default-features = false }
sha2 = { git = "https://github.com/sp1-patches/RustCrypto-hashes", branch = "v0.10.8" }

# modexp precompile
aurora-engine-modexp = { version = "1.0", default-features = false }
cfg-if = "1"

# Optional KZG point evaluation precompile
c-kzg = { package = "c-kzg-taiko", git = "https://github.com/smtmfft/c-kzg-4844", branch = "for-alpha7", default-features = false, optional = true, features = [
    "preload-kzg-settings",
    "no-threads",
]}
rust-kzg-zkcrypto = { path = "../../../rust-kzg/zkcrypto",default-features = false }
kzg = { path = "../../../rust-kzg/kzg",default-features = false }


# ecRecover precompile
k256 = { version = "0.13.3", default-features = false, features = ["ecdsa"] }
secp256k1 = { git = "https://github.com/CeciliaZ030/rust-secp256k1", branch = "sp1-patch", default-features = false, features = [
    "alloc",
    "recovery",
    "rand",
    "global-context",
], optional = true }


[dev-dependencies]
criterion = { version = "0.5" }
rand = { version = "0.8", features = ["std"] }

[features]
default = ["std", "c-kzg", "secp256k1", "portable"]
std = [
    "revm-primitives/std",
    "k256/std",
    "once_cell/std",
    "ripemd/std",
    "sha2/std",
    "c-kzg?/std",
    "secp256k1?/std",
]
asm-keccak = ["revm-primitives/asm-keccak"]

taiko = ["revm-primitives/taiko"]
# taiko default handler enabled taiko handler register by default in EvmBuilder.
taiko-default-handler = [
    "taiko",
    "revm-primitives/taiko-default-handler",
]
negate-taiko-default-handler = [
    "revm-primitives/negate-taiko-default-handler",
]

# These libraries may not work on all no_std platforms as they depend on C.

# Enables the KZG point evaluation precompile.
c-kzg = ["dep:c-kzg", "revm-primitives/c-kzg"]
portable = ["revm-primitives/portable", "c-kzg?/portable"]

# Use `secp256k1` as a faster alternative to `k256`.
# The problem that `secp256k1` has is it fails to build for `wasm` target on Windows and Mac as it is c lib.
# In Linux it passes. If you don't require to build wasm on win/mac, it is safe to use it and it is enabled by default.
secp256k1 = ["dep:secp256k1"]

sp1-cycle-tracker = []

[[bench]]
name = "bench"
path = "benches/bench.rs"
harness = false
